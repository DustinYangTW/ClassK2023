@* @model IEnumerable<MyModel_DBFirst.Models.tStudent> *@

@model MyModel_DBFirst.ViewModels.VMtStudent


@{
    ViewData["Title"] = ViewData["DeptName"]+"學生資料列表";
}

<h1 class="text-center">@ViewData["Title"]</h1>

@*//5.8.5 修改Index View的排版方式*@
<div class="row">
    <div class="col-2 mt-4">
        <h4 class="text-center">科系列表</h4>
        <div class="list-group">
        @foreach (var item in Model.department)
        {
            <a asasp-action="Index" asp-route-deptid="@item.DeptID" class="list-group-item list-group-item-action fs-5 text-center">@item.DeptName</a>

        }
        </div>
    </div>
    <div class="col-10">
        <p class="text-end">

            @* //5.9.1 修改Index View上Create的超鏈結進行參數傳遞 *@
            <a asp-action="Create" asp-route-deptid="@ViewData["DeptID"]" class="btn btn-primary">新增@(ViewData["DeptName"])學生資料</a>
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.student.FirstOrDefault().fStuId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.student.FirstOrDefault().fName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.student.FirstOrDefault().fEmail)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.student.FirstOrDefault().fScore)
                    </th>
                  @*   <th>
                        @Html.DisplayNameFor(model => model.student.FirstOrDefault().DeptID)
                    </th> *@
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.student)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.fStuId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.fName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.fEmail)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.fScore)
                        </td>
                       @*  <td>
                            @Html.DisplayFor(modelItem => item.Department.DeptName)
                        </td> *@
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.fStuId" class="btn btn-info">修改</a>
                            @*    <a asp-action="Details" asp-route-id="@item.fStuId" class="btn btn-warning">詳細資料</a> *@
                            @*  <a asp-action="Delete" asp-route-id="@item.fStuId" class="btn btn-danger">刪除</a> *@

                            @*//4.5.2 將Index的Delete改為Form，以Post方式送出*@
                            <form asp-action="Delete">
                                <input type="hidden" value="@item.fStuId" name="id" id="id">
                                <input type="submit" value="刪除" class="btn btn-danger" onclick="return confirm('確定刪除【@(item.fName)】此筆資料嗎?')">
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>




